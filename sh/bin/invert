#!/usr/bin/env bash

# Determine if virtual console or Xorg


# Return 1 if the console is a tty
function is_tty()
{
    # systemd implements an $INVOCATION_ID for processes it spawns (including console TTYs)
    # so this should evaluate to true (mostly probably?) only for console TTYs and will run
    # if a virtual terminal is started from within a TTY
    if [[ -n "$INVOCATION_ID" && -n "$SHELL" ]]; then
        return 0
    fi
    
    # I don't know if it would ever be possible to login through a
    # physical console and not have $SHELL or $INVOCATION_ID set?
    # But I'm paranoid. And environment variables aren't always reliable.
    # So we also test the tty device.
    case $(tty) in /dev/tty[0-9]*)
        return 0
    esac

    return 1
}

# Return 1 if the console is called from within Xorg
function is_xorg()
{
    if xhost >& /dev/null; then
        return 0
    fi

    return 1
}

# Invert tty colors
function invert_tty()
{
    if [[ "$1" = "bw" ]]; then
        setterm -term linux -back black -fore white -clear all -store
    else
        setterm -term linux -back white -fore black -clear all -store
    fi
}

# Invert colors in Xorg session
function invert_xorg()
{
    xcalib -d "$DISPLAY" -invert -alter
}

if is_tty; then
    echo tty
    invert_tty "$1"
elif is_xorg; then
    echo xorg
    invert_xorg
fi