#!/usr/bin/env bash

# Determine if column is installed and, if so, if it's from util-linux or not
column_cmd=("cat")
if command -v column >/dev/null 2>&1; then
    if column --version 2>&1 | grep -q 'util-linux'; then
        column_cmd=("column" "-s" $'\t' "-t")
    else
        column_cmd=("column" "-s" $'\t' "-t" "-n")
    fi
fi
if command -v ip >/dev/null 2>&1; then
    ip addr \
        | awk -v DEBUG="${DEBUG}" '
        function debug(msg) {
            if (DEBUG == "true" || DEBUG == 1) {
                # Print a timestamp, the file line number, and the message
                printf("[%s] (LN%03d)  %s\n", strftime("%Y-%m-%d %H:%M:%S"), NR, msg) > "/dev/stderr"
            }
        }
        function handle_iface() {
            if (iface && (ip || ip6)) {
                print iface "\t" mac "\t" ip "\t" ip6;
            }
            iface = "";
            mac = "";
            ip = "";
            ip6 = "";
        }
        function is_up(line) {
            debug("checking if interface is up -- " line)
            split(line, line_parts, " ");
            indicators = line_parts[3];
            gsub(/^</, "", indicators);
            gsub(/>$/, "", indicators);
            debug("  indicators: " indicators)
            split(indicators, indicators_parts, ",");
            for (i in indicators_parts) {
                debug("    indicator: " indicators_parts[i])
                if (indicators_parts[i] == "UP") {
                    return 1;
                }
            }
            return 0;
        }

        BEGIN {
            iface_is_up = 0;
            iface = "";
            mac = "";
            ip = "";
            ip6 = "";
        }

        # A new interface is found
        /^[^ ]/ {
            debug("found new interface: " $0);
            handle_iface();
            if (is_up($0)) {
                debug("interface is up");
                split($0, line_parts, ": ");
                iface = line_parts[2];
                iface_is_up = 1;
            } else {
                debug("interface is down");
                iface_is_up = 0;
            }
        }

        iface_is_up && /^[[:space:]]+link\/ether/ {
            debug("found link: " $0);
            split($0, line_parts, " ");
            mac = line_parts[2];
            debug("mac: " mac);
            next;
        }

        iface_is_up && /^[[:space:]]+inet / {
            split($0, line_parts, " ");
            ip = line_parts[2];
            gsub(/\/.*/, "", ip);
            debug("found ip: " ip);
        }

        iface_is_up && /^[[:space:]]+inet6 / {
            # ip6 = gensub(/.*inet6 ([^ ]+)\/.*/, "\\1", "g");
            split($0, line_parts, " ");
            ip6 = line_parts[2];
            gsub(/\/.*/, "", ip6);
            debug("found ip6: " ip6);
        }

        END {
            handle_iface();
        }'
elif command -v ifconfig >/dev/null 2>&1; then
    ifconfig -a \
        | grep -B1 inet \
        | sed -E '
            s/.*inet6? //;
            s/>.*//;
            s/: .*</\t/;
            s/ .*//' \
        | tr '\n' ' ' \
        | sed -e '
            s/ -- /\n/g;
            s/\t/ /g' \
        | grep 'UP' \
        | awk '{print $1 "\t" $3 "\t" $4}'
else
    echo "error: no known network management utility found" >&2
    exit 1
fi | "${column_cmd[@]}"
